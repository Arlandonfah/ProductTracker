{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\nexport const useApi = () => {\n  _s();\n  const [apiState, setApiState] = useState({\n    data: null,\n    loading: false,\n    error: null\n  });\n  const callApi = useCallback(async (url, options = {}) => {\n    setApiState(prev => ({\n      ...prev,\n      loading: true,\n      error: null\n    }));\n    try {\n      const baseUrl = process.env.REACT_APP_API_BASE_URL || \"http://localhost:5000/api\";\n      const fullUrl = `${baseUrl}${url}`;\n      const body = options.body ? JSON.stringify(options.body) : null;\n      const response = await fetch(fullUrl, {\n        method: options.method || \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          ...options.headers\n        },\n        body,\n        credentials: \"include\"\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setApiState({\n        data,\n        loading: false,\n        error: null\n      });\n      return data;\n    } catch (error) {\n      const message = error instanceof Error ? error.message : \"Erreur inconnue\";\n      setApiState({\n        data: null,\n        loading: false,\n        error: message\n      });\n      return null;\n    }\n  }, []);\n  return {\n    ...apiState,\n    callApi,\n    reset: () => setApiState({\n      data: null,\n      loading: false,\n      error: null\n    })\n  };\n};\n_s(useApi, \"I0ym+omt4WfCH8WblI81QTfB4AE=\");\nexport const useAdminAuth = () => {\n  _s2();\n  const {\n    callApi,\n    ...state\n  } = useApi();\n  const login = async (username, password) => {\n    return callApi(\"/auth/login\", {\n      method: \"POST\",\n      body: {\n        username,\n        password\n      }\n    });\n  };\n  return {\n    login,\n    ...state\n  };\n};\n_s2(useAdminAuth, \"wJOfZvXZS3SAJYGBqlmIX0MgpZ0=\", false, function () {\n  return [useApi];\n});","map":{"version":3,"names":["useState","useCallback","useApi","_s","apiState","setApiState","data","loading","error","callApi","url","options","prev","baseUrl","process","env","REACT_APP_API_BASE_URL","fullUrl","body","JSON","stringify","response","fetch","method","headers","credentials","ok","errorData","json","Error","status","message","reset","useAdminAuth","_s2","state","login","username","password"],"sources":["C:/Users/Arlandon Andria/Music/ProductTracker/frontend/src/hooks/useApi.ts"],"sourcesContent":["import { useState, useCallback } from \"react\";\r\n\r\ninterface ApiRequestOptions {\r\n  method?: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\";\r\n  headers?: Record<string, string>;\r\n  body?: unknown; // Modifié de BodyInit à unknown\r\n}\r\n\r\ninterface ApiState<T> {\r\n  data: T | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nexport const useApi = <T>() => {\r\n  const [apiState, setApiState] = useState<ApiState<T>>({\r\n    data: null,\r\n    loading: false,\r\n    error: null,\r\n  });\r\n\r\n  const callApi = useCallback(\r\n    async (url: string, options: ApiRequestOptions = {}): Promise<T | null> => {\r\n      setApiState((prev) => ({ ...prev, loading: true, error: null }));\r\n\r\n      try {\r\n        const baseUrl =\r\n          process.env.REACT_APP_API_BASE_URL || \"http://localhost:5000/api\";\r\n        const fullUrl = `${baseUrl}${url}`;\r\n\r\n        \r\n        const body = options.body\r\n          ? JSON.stringify(options.body)\r\n          : null;\r\n\r\n        const response = await fetch(fullUrl, {\r\n          method: options.method || \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            ...options.headers,\r\n          },\r\n          body,\r\n          credentials: \"include\",\r\n        });\r\n\r\n        if (!response.ok) {\r\n          const errorData = await response.json();\r\n          throw new Error(\r\n            errorData.error || `HTTP error! status: ${response.status}`\r\n          );\r\n        }\r\n\r\n        const data: T = await response.json();\r\n        setApiState({ data, loading: false, error: null });\r\n        return data;\r\n      } catch (error) {\r\n        const message =\r\n          error instanceof Error ? error.message : \"Erreur inconnue\";\r\n        setApiState({ data: null, loading: false, error: message });\r\n        return null;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  return {\r\n    ...apiState,\r\n    callApi,\r\n    reset: () => setApiState({ data: null, loading: false, error: null }),\r\n  };\r\n};\r\n\r\nexport const useAdminAuth = () => {\r\n  const { callApi, ...state } = useApi<{ token: string }>();\r\n\r\n  const login = async (username: string, password: string) => {\r\n    return callApi(\"/auth/login\", {\r\n      method: \"POST\",\r\n      body: { username, password }, \r\n    });\r\n  };\r\n\r\n  return { login, ...state };\r\n};"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAc7C,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAS;EAAAC,EAAA;EAC7B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAc;IACpDM,IAAI,EAAE,IAAI;IACVC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAMC,OAAO,GAAGR,WAAW,CACzB,OAAOS,GAAW,EAAEC,OAA0B,GAAG,CAAC,CAAC,KAAwB;IACzEN,WAAW,CAAEO,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAEL,OAAO,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC,CAAC;IAEhE,IAAI;MACF,MAAMK,OAAO,GACXC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,2BAA2B;MACnE,MAAMC,OAAO,GAAG,GAAGJ,OAAO,GAAGH,GAAG,EAAE;MAGlC,MAAMQ,IAAI,GAAGP,OAAO,CAACO,IAAI,GACrBC,IAAI,CAACC,SAAS,CAACT,OAAO,CAACO,IAAI,CAAC,GAC5B,IAAI;MAER,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACL,OAAO,EAAE;QACpCM,MAAM,EAAEZ,OAAO,CAACY,MAAM,IAAI,KAAK;QAC/BC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,GAAGb,OAAO,CAACa;QACb,CAAC;QACDN,IAAI;QACJO,WAAW,EAAE;MACf,CAAC,CAAC;MAEF,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIC,KAAK,CACbF,SAAS,CAACnB,KAAK,IAAI,uBAAuBa,QAAQ,CAACS,MAAM,EAC3D,CAAC;MACH;MAEA,MAAMxB,IAAO,GAAG,MAAMe,QAAQ,CAACO,IAAI,CAAC,CAAC;MACrCvB,WAAW,CAAC;QAAEC,IAAI;QAAEC,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAE;MAAK,CAAC,CAAC;MAClD,OAAOF,IAAI;IACb,CAAC,CAAC,OAAOE,KAAK,EAAE;MACd,MAAMuB,OAAO,GACXvB,KAAK,YAAYqB,KAAK,GAAGrB,KAAK,CAACuB,OAAO,GAAG,iBAAiB;MAC5D1B,WAAW,CAAC;QAAEC,IAAI,EAAE,IAAI;QAAEC,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAEuB;MAAQ,CAAC,CAAC;MAC3D,OAAO,IAAI;IACb;EACF,CAAC,EACD,EACF,CAAC;EAED,OAAO;IACL,GAAG3B,QAAQ;IACXK,OAAO;IACPuB,KAAK,EAAEA,CAAA,KAAM3B,WAAW,CAAC;MAAEC,IAAI,EAAE,IAAI;MAAEC,OAAO,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAK,CAAC;EACtE,CAAC;AACH,CAAC;AAACL,EAAA,CAxDWD,MAAM;AA0DnB,OAAO,MAAM+B,YAAY,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAChC,MAAM;IAAEzB,OAAO;IAAE,GAAG0B;EAAM,CAAC,GAAGjC,MAAM,CAAoB,CAAC;EAEzD,MAAMkC,KAAK,GAAG,MAAAA,CAAOC,QAAgB,EAAEC,QAAgB,KAAK;IAC1D,OAAO7B,OAAO,CAAC,aAAa,EAAE;MAC5Bc,MAAM,EAAE,MAAM;MACdL,IAAI,EAAE;QAAEmB,QAAQ;QAAEC;MAAS;IAC7B,CAAC,CAAC;EACJ,CAAC;EAED,OAAO;IAAEF,KAAK;IAAE,GAAGD;EAAM,CAAC;AAC5B,CAAC;AAACD,GAAA,CAXWD,YAAY;EAAA,QACO/B,MAAM;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}