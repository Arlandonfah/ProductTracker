{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport api from '../api';\n// Import pour le typage des erreurs\n\nconst initialState = {\n  reviews: [],\n  loading: false,\n  error: null,\n  filters: {\n    sort: 'newest',\n    search: ''\n  },\n  distribution: [],\n  currentProductId: null\n};\nexport const fetchProductReviews = createAsyncThunk('reviews/fetchProductReviews', async ({\n  productId,\n  sort,\n  search\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await api.get(`/products/${productId}/reviews`, {\n      params: {\n        sort,\n        search\n      }\n    });\n    return {\n      productId,\n      reviews: response.data\n    };\n  } catch (err) {\n    var _error$response, _error$response$data;\n    const error = err;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Erreur de chargement des avis');\n  }\n});\nexport const fetchRatingDistribution = createAsyncThunk('reviews/fetchRatingDistribution', async (productId, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await api.get(`/products/${productId}/ratings/distribution`);\n    return response.data;\n  } catch (err) {\n    var _error$response2, _error$response2$data;\n    const error = err;\n    return rejectWithValue(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Erreur de chargement de la distribution');\n  }\n});\nexport const addReview = createAsyncThunk('reviews/addReview', async ({\n  productId,\n  rating,\n  comment\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await api.post('/reviews', {\n      productId,\n      rating,\n      comment\n    });\n    return response.data;\n  } catch (err) {\n    var _error$response3, _error$response3$data;\n    const error = err;\n    return rejectWithValue(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Erreur lors de l\\'ajout de l\\'avis');\n  }\n});\nconst reviewSlice = createSlice({\n  name: 'reviews',\n  initialState,\n  reducers: {\n    setFilters: (state, action) => {\n      state.filters = {\n        ...state.filters,\n        ...action.payload\n      };\n    },\n    resetReviews: state => {\n      state.reviews = [];\n      state.distribution = [];\n      state.currentProductId = null;\n    }\n  },\n  extraReducers: builder => {\n    // Fetch Product Reviews\n    builder.addCase(fetchProductReviews.pending, state => {\n      state.loading = true;\n      state.error = null;\n    });\n    builder.addCase(fetchProductReviews.fulfilled, (state, action) => {\n      state.loading = false;\n      state.reviews = action.payload.reviews;\n      state.currentProductId = action.payload.productId;\n    });\n    builder.addCase(fetchProductReviews.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n\n    // Fetch Rating Distribution\n    builder.addCase(fetchRatingDistribution.pending, state => {\n      state.error = null;\n    });\n    builder.addCase(fetchRatingDistribution.fulfilled, (state, action) => {\n      state.distribution = action.payload;\n    });\n    builder.addCase(fetchRatingDistribution.rejected, (state, action) => {\n      state.error = action.payload;\n    });\n\n    // Add Review\n    builder.addCase(addReview.pending, state => {\n      state.error = null;\n    });\n    builder.addCase(addReview.fulfilled, (state, action) => {\n      // Ajouter le nouvel avis au début de la liste\n      state.reviews = [action.payload, ...state.reviews];\n\n      // Mettre à jour la distribution des notes\n      const ratingIndex = state.distribution.findIndex(d => d.rating === action.payload.rating);\n      if (ratingIndex !== -1) {\n        state.distribution[ratingIndex].count += 1;\n      } else {\n        state.distribution.push({\n          rating: action.payload.rating,\n          count: 1\n        });\n        state.distribution.sort((a, b) => a.rating - b.rating);\n      }\n    });\n    builder.addCase(addReview.rejected, (state, action) => {\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  setFilters,\n  resetReviews\n} = reviewSlice.actions;\nexport default reviewSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","api","initialState","reviews","loading","error","filters","sort","search","distribution","currentProductId","fetchProductReviews","productId","rejectWithValue","response","get","params","data","err","_error$response","_error$response$data","fetchRatingDistribution","_error$response2","_error$response2$data","addReview","rating","comment","post","_error$response3","_error$response3$data","reviewSlice","name","reducers","setFilters","state","action","payload","resetReviews","extraReducers","builder","addCase","pending","fulfilled","rejected","ratingIndex","findIndex","d","count","push","a","b","actions","reducer"],"sources":["C:/Users/Arlandon Andria/Music/ProductTracker/frontend/src/store/reviewSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport api from '../api';\r\nimport type { AxiosError } from 'axios'; // Import pour le typage des erreurs\r\n\r\ninterface Review {\r\n  id: number;\r\n  rating: number;\r\n  comment: string;\r\n  createdAt: string;\r\n  productId: number;\r\n}\r\n\r\ninterface ReviewState {\r\n  reviews: Review[];\r\n  loading: boolean;\r\n  error: string | null;\r\n  filters: {\r\n    sort: 'newest' | 'highest' | 'lowest';\r\n    search: string;\r\n  };\r\n  distribution: {\r\n    rating: number;\r\n    count: number;\r\n  }[];\r\n  currentProductId: number | null;\r\n}\r\n\r\ninterface ApiError {\r\n  message: string;\r\n  response?: {\r\n    data?: {\r\n      error?: string;\r\n    };\r\n  };\r\n}\r\n\r\nconst initialState: ReviewState = {\r\n  reviews: [],\r\n  loading: false,\r\n  error: null,\r\n  filters: {\r\n    sort: 'newest',\r\n    search: ''\r\n  },\r\n  distribution: [],\r\n  currentProductId: null\r\n};\r\n\r\nexport const fetchProductReviews = createAsyncThunk(\r\n  'reviews/fetchProductReviews',\r\n  async ({ \r\n    productId, \r\n    sort, \r\n    search \r\n  }: { \r\n    productId: number; \r\n    sort?: string; \r\n    search?: string \r\n  }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await api.get(`/products/${productId}/reviews`, {\r\n        params: { sort, search }\r\n      });\r\n      return {\r\n        productId,\r\n        reviews: response.data\r\n      };\r\n    } catch (err) {\r\n      const error = err as AxiosError<{ error?: string }>;\r\n      return rejectWithValue(\r\n        error.response?.data?.error || 'Erreur de chargement des avis'\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\nexport const fetchRatingDistribution = createAsyncThunk(\r\n  'reviews/fetchRatingDistribution',\r\n  async (productId: number, { rejectWithValue }) => {\r\n    try {\r\n      const response = await api.get(`/products/${productId}/ratings/distribution`);\r\n      return response.data;\r\n    } catch (err) {\r\n      const error = err as AxiosError<{ error?: string }>;\r\n      return rejectWithValue(\r\n        error.response?.data?.error || 'Erreur de chargement de la distribution'\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\nexport const addReview = createAsyncThunk(\r\n  'reviews/addReview',\r\n  async ({ \r\n    productId, \r\n    rating, \r\n    comment \r\n  }: {\r\n    productId: number;\r\n    rating: number;\r\n    comment: string\r\n  }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await api.post('/reviews', {\r\n        productId,\r\n        rating,\r\n        comment\r\n      });\r\n      return response.data;\r\n    } catch (err) {\r\n      const error = err as AxiosError<{ error?: string }>;\r\n      return rejectWithValue(\r\n        error.response?.data?.error || 'Erreur lors de l\\'ajout de l\\'avis'\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\nconst reviewSlice = createSlice({\r\n  name: 'reviews',\r\n  initialState,\r\n  reducers: {\r\n    setFilters: (state, action: PayloadAction<{\r\n      sort?: 'newest' | 'highest' | 'lowest';\r\n      search?: string\r\n    }>) => {\r\n      state.filters = {\r\n        ...state.filters,\r\n        ...action.payload\r\n      };\r\n    },\r\n    resetReviews: (state) => {\r\n      state.reviews = [];\r\n      state.distribution = [];\r\n      state.currentProductId = null;\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    // Fetch Product Reviews\r\n    builder.addCase(fetchProductReviews.pending, (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    });\r\n    builder.addCase(fetchProductReviews.fulfilled, (state, action) => {\r\n      state.loading = false;\r\n      state.reviews = action.payload.reviews;\r\n      state.currentProductId = action.payload.productId;\r\n    });\r\n    builder.addCase(fetchProductReviews.rejected, (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.payload as string; \r\n    });\r\n\r\n    // Fetch Rating Distribution\r\n    builder.addCase(fetchRatingDistribution.pending, (state) => {\r\n      state.error = null;\r\n    });\r\n    builder.addCase(fetchRatingDistribution.fulfilled, (state, action) => {\r\n      state.distribution = action.payload;\r\n    });\r\n    builder.addCase(fetchRatingDistribution.rejected, (state, action) => {\r\n      state.error = action.payload as string;\r\n    });\r\n\r\n    // Add Review\r\n    builder.addCase(addReview.pending, (state) => {\r\n      state.error = null;\r\n    });\r\n    builder.addCase(addReview.fulfilled, (state, action) => {\r\n      // Ajouter le nouvel avis au début de la liste\r\n      state.reviews = [action.payload, ...state.reviews];\r\n\r\n      // Mettre à jour la distribution des notes\r\n      const ratingIndex = state.distribution.findIndex(\r\n        d => d.rating === action.payload.rating\r\n      );\r\n\r\n      if (ratingIndex !== -1) {\r\n        state.distribution[ratingIndex].count += 1;\r\n      } else {\r\n        state.distribution.push({\r\n          rating: action.payload.rating,\r\n          count: 1\r\n        });\r\n        state.distribution.sort((a, b) => a.rating - b.rating);\r\n      }\r\n    });\r\n    builder.addCase(addReview.rejected, (state, action) => {\r\n      state.error = action.payload as string; \r\n    });\r\n  }\r\n});\r\n\r\nexport const { setFilters, resetReviews } = reviewSlice.actions;\r\n\r\nexport default reviewSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}