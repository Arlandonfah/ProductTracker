{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport api from '../api'; // Import de l'API configurée\n\nconst initialState = {\n  isAuthenticated: false,\n  token: null,\n  loading: false,\n  error: null\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    loginStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    loginSuccess: (state, action) => {\n      state.isAuthenticated = true;\n      state.token = action.payload;\n      state.loading = false;\n      state.error = null;\n    },\n    loginFailure: (state, action) => {\n      state.isAuthenticated = false;\n      state.token = null;\n      state.loading = false;\n      state.error = action.payload;\n    },\n    logout: state => {\n      state.isAuthenticated = false;\n      state.token = null;\n      state.loading = false;\n      state.error = null;\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure,\n  logout\n} = authSlice.actions;\n\n// Thunk pour l'authentification\nexport const login = (username, password) => async dispatch => {\n  dispatch(loginStart());\n  try {\n    const response = await api.post('/auth/login', {\n      username,\n      password\n    });\n    dispatch(loginSuccess(response.data.token));\n    localStorage.setItem('adminToken', response.data.token);\n  } catch (error) {\n    var _error$response, _error$response$data;\n    const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Échec de la connexion';\n    dispatch(loginFailure(errorMessage));\n  }\n};\nexport const checkAuth = () => dispatch => {\n  const token = localStorage.getItem('adminToken');\n  if (token) {\n    dispatch(loginSuccess(token));\n  }\n};\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","api","initialState","isAuthenticated","token","loading","error","authSlice","name","reducers","loginStart","state","loginSuccess","action","payload","loginFailure","logout","actions","login","username","password","dispatch","response","post","data","localStorage","setItem","_error$response","_error$response$data","errorMessage","checkAuth","getItem","reducer"],"sources":["C:/Users/Arlandon Andria/Music/ProductTracker/frontend/src/store/authSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport api from '../api'; // Import de l'API configurée\r\nimport { AppDispatch } from './store';\r\n\r\ninterface AuthState {\r\n  isAuthenticated: boolean;\r\n  token: string | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: AuthState = {\r\n  isAuthenticated: false,\r\n  token: null,\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    loginStart: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    loginSuccess: (state, action: PayloadAction<string>) => {\r\n      state.isAuthenticated = true;\r\n      state.token = action.payload;\r\n      state.loading = false;\r\n      state.error = null;\r\n    },\r\n    loginFailure: (state, action: PayloadAction<string>) => {\r\n      state.isAuthenticated = false;\r\n      state.token = null;\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.isAuthenticated = false;\r\n      state.token = null;\r\n      state.loading = false;\r\n      state.error = null;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { loginStart, loginSuccess, loginFailure, logout } = authSlice.actions;\r\n\r\n// Thunk pour l'authentification\r\nexport const login = (username: string, password: string) => async (dispatch: AppDispatch) => {\r\n  dispatch(loginStart());\r\n  \r\n  try {\r\n    const response = await api.post('/auth/login', { username, password });\r\n    dispatch(loginSuccess(response.data.token));\r\n    localStorage.setItem('adminToken', response.data.token);\r\n  } catch (error: any) {\r\n    const errorMessage = error.response?.data?.error || 'Échec de la connexion';\r\n    dispatch(loginFailure(errorMessage));\r\n  }\r\n};\r\n\r\nexport const checkAuth = () => (dispatch: AppDispatch) => {\r\n  const token = localStorage.getItem('adminToken');\r\n  if (token) {\r\n    dispatch(loginSuccess(token));\r\n  }\r\n};\r\n\r\nexport default authSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAC7D,OAAOC,GAAG,MAAM,QAAQ,CAAC,CAAC;;AAU1B,MAAMC,YAAuB,GAAG;EAC9BC,eAAe,EAAE,KAAK;EACtBC,KAAK,EAAE,IAAI;EACXC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,SAAS,GAAGP,WAAW,CAAC;EAC5BQ,IAAI,EAAE,MAAM;EACZN,YAAY;EACZO,QAAQ,EAAE;IACRC,UAAU,EAAGC,KAAK,IAAK;MACrBA,KAAK,CAACN,OAAO,GAAG,IAAI;MACpBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IACDM,YAAY,EAAEA,CAACD,KAAK,EAAEE,MAA6B,KAAK;MACtDF,KAAK,CAACR,eAAe,GAAG,IAAI;MAC5BQ,KAAK,CAACP,KAAK,GAAGS,MAAM,CAACC,OAAO;MAC5BH,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IACDS,YAAY,EAAEA,CAACJ,KAAK,EAAEE,MAA6B,KAAK;MACtDF,KAAK,CAACR,eAAe,GAAG,KAAK;MAC7BQ,KAAK,CAACP,KAAK,GAAG,IAAI;MAClBO,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,KAAK,GAAGO,MAAM,CAACC,OAAO;IAC9B,CAAC;IACDE,MAAM,EAAGL,KAAK,IAAK;MACjBA,KAAK,CAACR,eAAe,GAAG,KAAK;MAC7BQ,KAAK,CAACP,KAAK,GAAG,IAAI;MAClBO,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEI,UAAU;EAAEE,YAAY;EAAEG,YAAY;EAAEC;AAAO,CAAC,GAAGT,SAAS,CAACU,OAAO;;AAEnF;AACA,OAAO,MAAMC,KAAK,GAAGA,CAACC,QAAgB,EAAEC,QAAgB,KAAK,MAAOC,QAAqB,IAAK;EAC5FA,QAAQ,CAACX,UAAU,CAAC,CAAC,CAAC;EAEtB,IAAI;IACF,MAAMY,QAAQ,GAAG,MAAMrB,GAAG,CAACsB,IAAI,CAAC,aAAa,EAAE;MAAEJ,QAAQ;MAAEC;IAAS,CAAC,CAAC;IACtEC,QAAQ,CAACT,YAAY,CAACU,QAAQ,CAACE,IAAI,CAACpB,KAAK,CAAC,CAAC;IAC3CqB,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEJ,QAAQ,CAACE,IAAI,CAACpB,KAAK,CAAC;EACzD,CAAC,CAAC,OAAOE,KAAU,EAAE;IAAA,IAAAqB,eAAA,EAAAC,oBAAA;IACnB,MAAMC,YAAY,GAAG,EAAAF,eAAA,GAAArB,KAAK,CAACgB,QAAQ,cAAAK,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBH,IAAI,cAAAI,oBAAA,uBAApBA,oBAAA,CAAsBtB,KAAK,KAAI,uBAAuB;IAC3Ee,QAAQ,CAACN,YAAY,CAACc,YAAY,CAAC,CAAC;EACtC;AACF,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAOT,QAAqB,IAAK;EACxD,MAAMjB,KAAK,GAAGqB,YAAY,CAACM,OAAO,CAAC,YAAY,CAAC;EAChD,IAAI3B,KAAK,EAAE;IACTiB,QAAQ,CAACT,YAAY,CAACR,KAAK,CAAC,CAAC;EAC/B;AACF,CAAC;AAED,eAAeG,SAAS,CAACyB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}