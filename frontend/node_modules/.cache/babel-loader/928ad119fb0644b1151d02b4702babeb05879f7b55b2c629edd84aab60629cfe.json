{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arlandon Andria\\\\Videos\\\\ProductTracker\\\\frontend\\\\src\\\\pages\\\\AdminPage.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ProductForm from '../components/ProductForm';\nimport ProductList from '../components/ProductList';\nimport AuthModal from '../components/AuthModal';\nimport { useApi } from '../hooks/useApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPage = () => {\n  _s();\n  const [showAuthModal, setShowAuthModal] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [showForm, setShowForm] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const {\n    data: products,\n    callApi: fetchProducts\n  } = useApi();\n  const {\n    callApi: deleteProduct\n  } = useApi();\n  const {\n    login,\n    loading: authLoading\n  } = useAdminAuth();\n\n  // Vérifier l'authentification au montage\n  useEffect(() => {\n    const token = localStorage.getItem('adminToken');\n    if (token) {\n      setIsAuthenticated(true);\n      setShowAuthModal(false);\n      loadProducts(1);\n    }\n  }, []);\n  const loadProducts = async page => {\n    const response = await fetchProducts(`/products?page=${page}`);\n    if (response) {\n      setCurrentPage(page);\n      setTotalPages(response.meta.last_page);\n    }\n  };\n  const handleLogin = async (username, password) => {\n    const result = await login(username, password);\n    if (result !== null && result !== void 0 && result.token) {\n      localStorage.setItem('adminToken', result.token);\n      setIsAuthenticated(true);\n      setShowAuthModal(false);\n      loadProducts(1);\n    }\n  };\n  const handleDelete = async id => {\n    if (window.confirm('Êtes-vous sûr de vouloir supprimer ce produit?')) {\n      await deleteProduct(`/products/${id}`, {\n        method: 'DELETE'\n      });\n      loadProducts(currentPage); // Rafraîchir la liste\n    }\n  };\n  const handlePageChange = page => {\n    loadProducts(page);\n  };\n  const handleSelectProduct = product => {\n    // Implémentez cette fonction si nécessaire\n    console.log('Produit sélectionné:', product);\n  };\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(AuthModal, {\n      show: showAuthModal,\n      onLogin: handleLogin,\n      loading: authLoading,\n      onClose: () => setShowAuthModal(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 py-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold\",\n        children: \"Administration des Produits\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowForm(!showForm),\n        className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\",\n        children: showForm ? 'Annuler' : 'Ajouter un Produit'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-12\",\n      children: /*#__PURE__*/_jsxDEV(ProductForm, {\n        onSuccess: () => {\n          setShowForm(false);\n          loadProducts(currentPage);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), products && /*#__PURE__*/_jsxDEV(ProductList, {\n      products: products.data || [],\n      adminMode: true,\n      onDelete: handleDelete,\n      currentPage: currentPage,\n      totalPages: totalPages,\n      onPageChange: handlePageChange,\n      onSelectProduct: handleSelectProduct\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPage, \"Qn/YLqMKs2UzvzEegiBSO9zpxgQ=\", false, function () {\n  return [useApi, useApi, useAdminAuth];\n});\n_c = AdminPage;\nconst useAdminAuth = () => {\n  _s2();\n  const {\n    callApi,\n    ...state\n  } = useApi();\n  const login = async (username, password) => {\n    return callApi('/auth/login', {\n      method: 'POST',\n      body: {\n        username,\n        password\n      }\n    });\n  };\n  return {\n    login,\n    ...state\n  };\n};\n_s2(useAdminAuth, \"wJOfZvXZS3SAJYGBqlmIX0MgpZ0=\", false, function () {\n  return [useApi];\n});\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useState","useEffect","ProductForm","ProductList","AuthModal","useApi","jsxDEV","_jsxDEV","AdminPage","_s","showAuthModal","setShowAuthModal","isAuthenticated","setIsAuthenticated","showForm","setShowForm","currentPage","setCurrentPage","totalPages","setTotalPages","data","products","callApi","fetchProducts","deleteProduct","login","loading","authLoading","useAdminAuth","token","localStorage","getItem","loadProducts","page","response","meta","last_page","handleLogin","username","password","result","setItem","handleDelete","id","window","confirm","method","handlePageChange","handleSelectProduct","product","console","log","show","onLogin","onClose","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onClick","onSuccess","adminMode","onDelete","onPageChange","onSelectProduct","_c","_s2","state","body","$RefreshReg$"],"sources":["C:/Users/Arlandon Andria/Videos/ProductTracker/frontend/src/pages/AdminPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ProductForm from '../components/ProductForm';\r\nimport ProductList from '../components/ProductList';\r\nimport AuthModal from '../components/AuthModal';\r\nimport { useApi } from '../hooks/useApi';\r\n\r\ninterface Product {\r\n  id: number;\r\n  title: string;\r\n  description: string;\r\n  price: number;\r\n  imageUrl: string;\r\n}\r\n\r\nconst AdminPage = () => {\r\n  const [showAuthModal, setShowAuthModal] = useState(true);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  \r\n  const { \r\n    data: products, \r\n    callApi: fetchProducts \r\n  } = useApi<{ data: Product[]; meta: { total: number; last_page: number } }>();\r\n  \r\n  const { callApi: deleteProduct } = useApi();\r\n  const { login, loading: authLoading } = useAdminAuth();\r\n\r\n  // Vérifier l'authentification au montage\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('adminToken');\r\n    if (token) {\r\n      setIsAuthenticated(true);\r\n      setShowAuthModal(false);\r\n      loadProducts(1);\r\n    }\r\n  }, []);\r\n\r\n  const loadProducts = async (page: number) => {\r\n    const response = await fetchProducts(`/products?page=${page}`);\r\n    if (response) {\r\n      setCurrentPage(page);\r\n      setTotalPages(response.meta.last_page);\r\n    }\r\n  };\r\n\r\n  const handleLogin = async (username: string, password: string) => {\r\n    const result = await login(username, password);\r\n    if (result?.token) {\r\n      localStorage.setItem('adminToken', result.token);\r\n      setIsAuthenticated(true);\r\n      setShowAuthModal(false);\r\n      loadProducts(1);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id: number) => {\r\n    if (window.confirm('Êtes-vous sûr de vouloir supprimer ce produit?')) {\r\n      await deleteProduct(`/products/${id}`, { method: 'DELETE' });\r\n      loadProducts(currentPage); // Rafraîchir la liste\r\n    }\r\n  };\r\n\r\n  const handlePageChange = (page: number) => {\r\n    loadProducts(page);\r\n  };\r\n\r\n  const handleSelectProduct = (product: Product) => {\r\n    // Implémentez cette fonction si nécessaire\r\n    console.log('Produit sélectionné:', product);\r\n  };\r\n\r\n  if (!isAuthenticated) {\r\n    return (\r\n      <AuthModal\r\n        show={showAuthModal}\r\n        onLogin={handleLogin}\r\n        loading={authLoading}\r\n        onClose={() => setShowAuthModal(false)}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-8\">\r\n      <div className=\"flex justify-between items-center mb-8\">\r\n        <h1 className=\"text-3xl font-bold\">Administration des Produits</h1>\r\n        <button\r\n          onClick={() => setShowForm(!showForm)}\r\n          className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\r\n        >\r\n          {showForm ? 'Annuler' : 'Ajouter un Produit'}\r\n        </button>\r\n      </div>\r\n\r\n      {showForm && (\r\n        <div className=\"mb-12\">\r\n          <ProductForm \r\n            onSuccess={() => {\r\n              setShowForm(false);\r\n              loadProducts(currentPage);\r\n            }} \r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {products && (\r\n        <ProductList \r\n          products={products.data || []} \r\n          adminMode={true}\r\n          onDelete={handleDelete}\r\n          currentPage={currentPage}\r\n          totalPages={totalPages}\r\n          onPageChange={handlePageChange}\r\n          onSelectProduct={handleSelectProduct}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useAdminAuth = () => {\r\n  const { callApi, ...state } = useApi<{ token: string }>();\r\n\r\n  const login = async (username: string, password: string) => {\r\n    return callApi('/auth/login', {\r\n      method: 'POST',\r\n      body: { username, password }\r\n    });\r\n  };\r\n\r\n  return { login, ...state };\r\n};\r\n\r\nexport default AdminPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}