services:
  db:
    image: postgres:14
    container_name: products_db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: products
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
      POSTGRES_INIT_DB_ARGS: "-E UTF8 --locale=C.UTF-8"
      POSTGRES_MULTIPLE_DATABASES: products
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - product-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile

    container_name: products_backend
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: admin
      DB_PASSWORD: password
      DB_NAME: products
      JWT_SECRET: votre_secret_jwt_ultra_secure
      UPLOAD_DIR: /app/uploads
    volumes:
      - ./backend/uploads:/app/uploads
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - product-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile

    container_name: products_frontend
    environment:
      REACT_APP_API_BASE_URL: http://backend:5000
    ports:
      - "3000:80"
    depends_on:
      - backend

volumes:
  pgdata:

networks:
  product-network:
    driver: bridge
